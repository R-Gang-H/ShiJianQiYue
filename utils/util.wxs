var utils = {
  /**
   * 日期转时间戳
   * date:传入日期
   */
  formatTime: function (date) {
    var year = date.getFullYear()
    var month = date.getMonth() + 1
    var day = date.getDate()
    var hour = date.getHours()
    var minute = date.getMinutes()
    var second = date.getSeconds()

    return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')
  },

  formatNumber: function (n) {
    n = n.toString()
    return n[1] ? n : '0' + n
  },
  /** 
   * 时间戳转化为年 月 日 时 分 秒 
   * number: 传入时间戳 
   * format：返回格式，支持自定义，Y/M/D h:m:s
   */
  getDateTime: function (number, format) {
    var formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
    var returnArr = [];

    //不能使用 new Date()
    var time = getDate(number * 1000);
    var year = time.getFullYear();
    var month = time.getMonth() + 1;
    var date = time.getDate();
    var hour = time.getHours();
    var minute = time.getMinutes();
    var second = time.getSeconds();

    month = month < 10 ? "0" + month : month;
    date = date < 10 ? "0" + date : date;
    hour = hour < 10 ? "0" + hour : hour;
    minute = minute < 10 ? "0" + minute : minute;
    second = second < 10 ? "0" + second : second;

    returnArr.push(year);
    returnArr.push(month);
    returnArr.push(date);
    returnArr.push(hour);
    returnArr.push(minute);
    returnArr.push(second);

    for (var i = 0; i < returnArr.length; i++) {
      format = format.replace(formateArr[i], returnArr[i]);
    }
    return format;
  },
  /**
   * 根据天数间隔获取时间,传入时间, 返回传入的时间和当前时间对比后的数值
   */
  getDateWithTime: function (time) {
    //当前时间的时间戳
    var timestamp = getDate();
    timestamp = timestamp / 1000;

    //传入时间转换成时间戳
    // time = getDate(time).getTime() / 1000

    //时间间隔  
    var timeInterval = timestamp - time;
    if (timeInterval <= 60) {
      return '刚刚'
    }
    if (timeInterval <= 60 * 60) {

      //一小时以内
      var minutes = timeInterval / 60;
      return parseInt(minutes) + '分钟前'
    }

    //传入的日期
    var newTime = time * 1000
    var dateTime = getDate(newTime)
    //当前日期
    var newTimeStamp = timestamp * 1000;
    var currentDate = getDate(newTimeStamp)

    if (timeInterval <= 60 * 60 * 24) {
      //两天内的

      //传入的日期年月日
      var dateTimeYearMonthDay = dateTime.getFullYear() + '-' + dateTime.getMonth() + '-' + dateTime.getDay()

      //当前的日期年月日
      var currentTimeYearMonthDay = currentDate.getFullYear() + '-' + currentDate.getMonth() + '-' + currentDate.getDay()

      if (dateTimeYearMonthDay == currentTimeYearMonthDay) {

        //同一天
        var h = dateTime.getHours();
        //分  
        var m = dateTime.getMinutes();
        return h + ':' + m;


      } else {
        return '昨天'
      }

    } else {

      //判断是否是同一年
      var Y = dateTime.getFullYear()
      var M = (dateTime.getMonth() + 1 < 10 ? '0' + (dateTime.getMonth() + 1) : dateTime.getMonth() + 1);
      //日  
      var D = dateTime.getDate() < 10 ? '0' + dateTime.getDate() : dateTime.getDate();
      var currentY = currentDate.getFullYear()
      if (Y == currentY) {
        //同一年

        return M + '-' + D
      } else {
        //不是同一年
        return Y + '-' + M + '-' + D
      }
    }
  },
  /** 
   * 保留几位小数点
   * value:原值
   * uint:保留几位
   */
  toFixed: function (value, unit) {
    return value.toFixed(2);
  },
  /**
   * 字符串转json
   */
  stringToJson: function (object) {
    return JSON.parse(object);
  },
  /**
   * json转字符串
   */
  jsonToString: function (object) {
    return JSON.stringify(object);
  },
  /**
   * 重新合成头像地址
   */
  heAddresss: function (url) {
    //获取“com”的下标
    var index = url.indexOf(".com");
    //index是“com”的下标，index + 1就是“com”后一位数字
    var urlAvater = url.substring(index + 4);
    return urlAvater;
  },

  /**
   * 保存发送文本
   */
  saveText: function (text) {
    wx.setStorageSync('sendText', text)
    return wx.getStorageSync('sendText');
  }

}

module.exports = {
  formatTime: utils.formatTime,
  getDateTime: utils.getDateTime,
  getDateWithTime: utils.getDateWithTime,
  toFixed: utils.toFixed,
  stringToJson: utils.stringToJson,
  jsonToString: utils.jsonToString,
  heAddresss: utils.heAddresss,
  saveText:utils.saveText,
}